(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{371:function(t,s,e){"use strict";e.r(s);var a=e(1),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"errors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#errors"}}),t._v(" Errors")]),t._v(" "),e("p",[t._v("Start by navagating to the "),e("code",[t._v("errors.go")]),t._v(" file within the types folder. Within your "),e("code",[t._v("errors.go")]),t._v(" file, define errors that are custom to your module along with their codes.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" types\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tsdk "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/cosmos/cosmos-sdk/types"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DefaultCodespace is the Module Name")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tDefaultCodespace sdk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CodespaceType "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ModuleName\n\n\tCodeNameDoesNotExist sdk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CodeType "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ErrNameDoesNotExist is the error for name not existing")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ErrNameDoesNotExist")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("codespace sdk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CodespaceType"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" sdk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Error "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sdk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewError")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("codespace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CodeNameDoesNotExist"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name does not exist"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("You must also add the corresponding method that'll be called at the time of error handling. For instance, let's say we try to delete a name that is not present in the store. In this case, an error should be thrown as the name does not exist.")]),t._v(" "),e("p",[t._v("We'll see later on in the tutorial where this method is called.")]),t._v(" "),e("p",[t._v("Now we move on to writing the Keeper for the module.")])])}),[],!1,null,null,null);s.default=n.exports}}]);