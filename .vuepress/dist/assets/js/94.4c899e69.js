(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{346:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"codec文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#codec文件"}}),t._v(" Codec文件")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tendermint/go-amino#registering-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("在Amino中注册你的数据类型"),a("OutboundLink")],1),t._v("使得它们能够被编码/解码，有一些代码需要放在"),a("code",[t._v("./x/nameservice/codec.go")]),t._v("中。你创建的任何接口和实现接口的任何结构都需要在"),a("code",[t._v("RegisterCodec")]),t._v("函数中声明。在此模块中，需要注册两个"),a("code",[t._v("Msg")]),t._v("的实现（"),a("code",[t._v("SetName")]),t._v("和"),a("code",[t._v("BuyName")]),t._v("），但你的"),a("code",[t._v("Whois")]),t._v("查询返回的类型不需要：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" nameservice\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/cosmos/cosmos-sdk/codec"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RegisterCodec registers concrete types on wire codec")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterCodec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("codec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Codec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterConcrete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MsgSetName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameservice/SetName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tcdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterConcrete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MsgBuyName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameservice/BuyName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"接下来需要为你的模块定义-cli-交互了。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接下来需要为你的模块定义-cli-交互了。"}}),t._v(" 接下来需要为你的模块定义 "),a("router-link",{attrs:{to:"/nameservice/tutorial/cn/10-cli.html"}},[t._v("CLI 交互")]),t._v("了。")],1)])}),[],!1,null,null,null);s.default=n.exports}}]);