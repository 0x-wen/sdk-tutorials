(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{289:function(s,a,t){"use strict";t.r(a);var e=t(1),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"makefile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#makefile"}}),s._v(" Makefile")]),s._v(" "),t("p",[s._v("Now let's add a short makefile so we can build our basic app. Open up your\n"),t("code",[s._v("Makefile")]),s._v(" and add the following code. Later we will add an additional command\nto build our CLI tools.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("VERSION :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("shell "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$(")]),s._v("shell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" describe --tags"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^v//'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\nCOMMIT :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("shell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log -1 --format"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\nldflags "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" -X github.com/cosmos/cosmos-sdk/version.Name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("HelloChain "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-X github.com/cosmos/cosmos-sdk/version.ServerName"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hcd "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-X github.com/cosmos/cosmos-sdk/version.ClientName"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hccli "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-X github.com/cosmos/cosmos-sdk/version.Version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("VERSION"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-X github.com/cosmos/cosmos-sdk/version.Commit"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("COMMIT"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\nBUILD_FLAGS :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" -ldflags "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("ldflags"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("'")]),s._v("\n\nall: "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\ninstall: go.sum\n\tgo "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -mod"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("readonly "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("BUILD_FLAGS"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" ./cmd/hcd\n\tgo "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -mod"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("readonly "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("BUILD_FLAGS"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" ./cmd/hccli\n\ngo.sum: go.mod\n\t\t@echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--\x3e Ensure dependencies have not been modified"')]),s._v("\n\t\tgo mod verify\n\n")])])]),t("p",[s._v("Then install your basic blockchain with "),t("code",[s._v("make install")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n--"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Ensure dependencies have not been modified\ngo mod verify\nall modules verified\ngo "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -tags "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ./cmd/hcd\n")])])]),t("p",[s._v("Wonderful. Next lets try out what we've built so far.")]),s._v(" "),t("p",[s._v(":::tip\nRemember you need to have Go installed and a proper $GOPATH configured\n:::")])])}),[],!1,null,null,null);a.default=n.exports}}]);