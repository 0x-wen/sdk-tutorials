(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{332:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cli"}}),t._v(" CLI")]),t._v(" "),a("p",[t._v("Now that we have implemented "),a("code",[t._v("greeter")]),t._v("'s client CLI commands, let's add them to\nour "),a("code",[t._v("hccli")]),t._v(" CLI tool so we can create and query greetings!")]),t._v(" "),a("p",[t._v("Your "),a("code",[t._v("cmd/hccli/main.go")]),t._v(" should look like this (add the highlighted lines).")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/tendermint/tendermint/libs/cli"')]),t._v("\n\n\tapp "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/cosmos/sdk-tutorials/hellochain"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/cosmos/sdk-tutorials/hellochain/starter"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/cosmos/sdk-tutorials/hellochain/x/greeter"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\tstarter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BuildModuleBasics")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AppModuleBasic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\trootCmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewCLICommand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\ttxCmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TxCmd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tqueryCmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("QueryCmd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add more Tx and Query commands")]),t._v("\n\tapp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModuleBasics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddTxCommands")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txCmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tapp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModuleBasics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddQueryCommands")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queryCmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\trootCmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddCommand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txCmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queryCmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\texecutor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" cli"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PrepareMainCmd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rootCmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HC"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" starter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DefaultCLIHome"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\terr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" executor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("We call "),a("code",[t._v("starter.BuildModuleBasics()")]),t._v(" to add "),a("code",[t._v("greeter")]),t._v(". "),a("code",[t._v("starter.GetTxCmd")]),t._v(" and\n"),a("code",[t._v("starter.GetQueryCmd")]),t._v(" collect the Tx and query commands for every module in the\nModuleBasicManager (including "),a("code",[t._v("greeter")]),t._v(") to assemble a parent command.")])])}),[],!1,null,null,null);s.default=e.exports}}]);